const keyboardDataObject = 
[
    [
      {
        keyCode: 'symbolUnknown',
        hasFunction: false,
        writing: { en: '`', ru: 'ё' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbol1',
        hasFunction: false,
        writing: { en: '1', ru: '1' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbol2',
        hasFunction: false,
        writing: { en: '2', ru: '2' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbol3',
        hasFunction: false,
        writing: { en: '3', ru: '3' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbol4',
        hasFunction: false,
        writing: { en: '4', ru: '4' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbol5',
        hasFunction: false,
        writing: { en: '5', ru: '5' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbol6',
        hasFunction: false,
        writing: { en: '6', ru: '6' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbol7',
        hasFunction: false,
        writing: { en: '7', ru: '7' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbol8',
        hasFunction: false,
        writing: { en: '8', ru: '8' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbol9',
        hasFunction: false,
        writing: { en: '9', ru: '9' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbol0',
        hasFunction: false,
        writing: { en: '0', ru: '0' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolMinus',
        hasFunction: false,
        writing: { en: '-', ru: '-' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolEqual',
        hasFunction: false,
        writing: { en: '=', ru: '=' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'Backspace',
        hasFunction: true,
        writing: { en: 'Back', ru: 'Back' },
        widthClass: 'keyboard-key-type2',
      },
      {
        keyCode: 'Delete',
        hasFunction: true,
        writing: { en: 'Del', ru: 'Del' },
        widthClass: 'keyboard-key-type2',
      },
    ],
    [
      {
        keyCode: 'Tab',
        hasFunction: true,
        writing: { en: 'Tab', ru: 'Tab' },
        widthClass: 'keyboard-key-type3',
      },
      {
        keyCode: 'symbolQ',
        hasFunction: false,
        writing: { en: 'q', ru: 'й' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolW',
        hasFunction: false,
        writing: { en: 'w', ru: 'ц' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolE',
        hasFunction: false,
        writing: { en: 'e', ru: 'у' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolR',
        hasFunction: false,
        writing: { en: 'r', ru: 'к' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolT',
        hasFunction: false,
        writing: { en: 't', ru: 'е' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolY',
        hasFunction: false,
        writing: { en: 'y', ru: 'н' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolU',
        hasFunction: false,
        writing: { en: 'u', ru: 'г' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolI',
        hasFunction: false,
        writing: { en: 'i', ru: 'ш' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolO',
        hasFunction: false,
        writing: { en: 'o', ru: 'щ' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolP',
        hasFunction: false,
        writing: { en: 'p', ru: 'з' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolBracketLeft',
        hasFunction: false,
        writing: { en: '[', ru: 'х' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolBracketRight',
        hasFunction: false,
        writing: { en: ']', ru: 'ъ' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolBackSlash',
        hasFunction: false,
        writing: { en: '\\', ru: '\\' },
        widthClass: 'keyboard-key-type1',
      },
    ],
    [
      {
        keyCode: 'CapsLock',
        hasFunction: true,
        writing: { en: 'Caps', ru: 'Caps' },
        widthClass: 'keyboard-key-type3',
      },
      {
        keyCode: 'symbolA',
        hasFunction: false,
        writing: { en: 'a', ru: 'ф' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolS',
        hasFunction: false,
        writing: { en: 's', ru: 'ы' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolD',
        hasFunction: false,
        writing: { en: 'd', ru: 'в' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolF',
        hasFunction: false,
        writing: { en: 'f', ru: 'а' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolG',
        hasFunction: false,
        writing: { en: 'g', ru: 'п' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolH',
        hasFunction: false,
        writing: { en: 'h', ru: 'р' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolJ',
        hasFunction: false,
        writing: { en: 'j', ru: 'о' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolK',
        hasFunction: false,
        writing: { en: 'k', ru: 'л' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolL',
        hasFunction: false,
        writing: { en: 'l', ru: 'д' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolSemicolon',
        hasFunction: false,
        writing: { en: ';', ru: 'ж' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolQuote',
        hasFunction: false,
        writing: { en: "'", ru: 'э' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'Enter',
        hasFunction: true,
        writing: { en: 'Enter', ru: 'Enter' },
        widthClass: 'keyboard-key-type3',
      },
    ],
    [
      {
        keyCode: 'ShiftLeft',
        hasFunction: true,
        writing: { en: 'Shift', ru: 'Shift' },
        widthClass: 'keyboard-key-type3',
      },
      {
        keyCode: 'symbolZ',
        hasFunction: false,
        writing: { en: 'z', ru: 'я' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolX',
        hasFunction: false,
        writing: { en: 'x', ru: 'ч' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolC',
        hasFunction: false,
        writing: { en: 'c', ru: 'с' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolV',
        hasFunction: false,
        writing: { en: 'v', ru: 'м' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolB',
        hasFunction: false,
        writing: { en: 'b', ru: 'и' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolN',
        hasFunction: false,
        writing: { en: 'n', ru: 'т' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolM',
        hasFunction: false,
        writing: { en: 'm', ru: 'ь' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolLess',
        hasFunction: false,
        writing: { en: ',', ru: 'б' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolMore',
        hasFunction: false,
        writing: { en: '.', ru: 'ю' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'symbolSlash',
        hasFunction: false,
        writing: { en: '/', ru: '.' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'ArrowUp',
        hasFunction: true,
        writing: { en: '⯅', ru: '⯅' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'ShiftRight',
        hasFunction: true,
        writing: { en: 'Shift', ru: 'Shift' },
        widthClass: 'keyboard-key-type3',
      },
    ],
    [
      {
        keyCode: 'ControlLeft',
        hasFunction: true,
        writing: { en: 'Ctrl', ru: 'Ctrl' },
        widthClass: 'keyboard-key-type2',
      },
      {
        keyCode: 'AltLeft',
        hasFunction: true,
        writing: { en: 'Alt', ru: 'Alt' },
        widthClass: 'keyboard-key-type2',
      },
      {
        keyCode: 'Space',
        hasFunction: false,
        writing: { en: ' ', ru: ' ' },
        widthClass: 'keyboard-key-space',
      },
      {
        keyCode: 'AltRight',
        hasFunction: true,
        writing: { en: 'Alt', ru: 'Alt' },
        widthClass: 'keyboard-key-type2',
      },
      {
        keyCode: 'ControlRight',
        hasFunction: true,
        writing: { en: 'Ctrl', ru: 'Ctrl' },
        widthClass: 'keyboard-key-type2',
      },
      {
        keyCode: 'ArrowLeft',
        hasFunction: true,
        writing: { en: '⯇', ru: '⯇' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'ArrowDown',
        hasFunction: true,
        writing: { en: '⯆', ru: '⯆' },
        widthClass: 'keyboard-key-type1',
      },
      {
        keyCode: 'ArrowRight',
        hasFunction: true,
        writing: { en: '⯈', ru: '⯈' },
        widthClass: 'keyboard-key-type1',
      },
    ],
];

export {keyboardDataObject};